name: CI
on:
  push:
    branches:
      - dev
  pull_request:
  release:
    types: [published]

jobs:
  test:
    name: Run standard workflow test
    if: ${{ github.event_name == 'push'}}
    runs-on: ubuntu-latest
    env:
      NXF_VER: ${{ matrix.nxf_ver }}
      NXF_ANSI_LOG: false
      CAPSULE_LOG: none    
    strategy:
      fail-fast: false        
      matrix:
        test_profile: ["test", "test_json"]
        profile: ["docker", "singularity", "conda"]
        include:
          # Test pipeline minimum Nextflow version
          - NXF_VER: '21.04.0'
    concurrency: ${{ matrix.profile }}  
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v2
 
      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-singularity@v5
        with:
          singularity-version: 3.7.1
          
      - name: Setup miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          auto-update-conda: true
          channels: conda-forge,bioconda,defaults
          python-version: ${{ matrix.python-version }}          

      - name: Conda clean
        if: matrix.profile == 'conda'
        run: conda clean -a

      - name: Install Nextflow
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/
        
      - name: Run pipeline with test data (conda)
        if: matrix.profile == 'conda'
        continue-on-error: true
        run: |
          nextflow run ${GITHUB_WORKSPACE} -profile ${{ matrix.test_profile}},${{ matrix.profile }}
          
      - name: Run pipeline with test data (docker, singularity)
        if: matrix.profile != 'conda'
        continue-on-error: false
        run: |
          nextflow run ${GITHUB_WORKSPACE} -profile ${{ matrix.test_profile}},${{ matrix.profile }}          

  unit_test:
    name: Run unit tests
    if: ${{ github.event_name == 'push'}}
    runs-on: ubuntu-latest
    env:
      NXF_VER: ${{ matrix.nxf_ver }}
      NXF_ANSI_LOG: false
      CAPSULE_LOG: none
    strategy:
      fail-fast: false        
      matrix:
        profile: ["docker", "singularity", "conda"]      
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: Install Python dependencies          
        run: |
          python -m ensurepip --upgrade
          pip install pandas pyliftover pytest-workflow requests

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-singularity@v5
        with:
          singularity-version: 3.7.1

      - name: Setup miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge,bioconda,defaults
          python-version: ${{ matrix.python-version }}

      - name: Conda clean
        if: matrix.profile == 'conda'
        run: conda clean -a
        
      - name: Install Nextflow
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - uses: actions/cache@v2
        with:
          path: /usr/local/bin/nextflow
          key: ${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}-nextflow-
            
      - name: Run unit tests
        run: TMPDIR=~ PROFILE=${{ matrix.profile }} pytest --kwdof --symlink

      - name: Output log on failure
        if: failure()
        run: |
          echo "======> log.out <======="
          cat /home/runner/pytest_workflow_*/*/log.out
          echo
          echo
          echo "======> log.err <======="
          cat /home/runner/pytest_workflow_*/*/log.err
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs-${{ matrix.profile }}
          path: |
            /home/runner/pytest_workflow_*/*/.nextflow.log
            /home/runner/pytest_workflow_*/*/log.out
            /home/runner/pytest_workflow_*/*/log.err
            /home/runner/pytest_workflow_*/*/work
            !/home/runner/pytest_workflow_*/*/work/conda
            !/home/runner/pytest_workflow_*/*/work/singularity        
        
        
